How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The diff listed the differences between the two files.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can revert back to a previous version if I make a mistake,
    eg. having a bug or adding unnecessary features.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
    You decide if the change merits a commit
    Can have a shorter, more user friendly history

    Cons:
    Can forget to commit
    Computer might stop working before you've saved a commit.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git was especially designed for backing up code where files
    are usually interdependent.

    Text, spreadsheet etc. are independent of each other, so
    they can be treated independantly.

How can you use the commands git log and git diff to view the history of files?

    Git log allows me to see a history of the commits, with comments
    Git diff allows me to see the changes I've made from one file version
    to another.

How might using version control make you more confident to make changes that
could break something?

    Because I'll know that I can always revert back to the working code.

Now that you have your workspace set up, what do you want to try using Git for?

    Building an Android app.
